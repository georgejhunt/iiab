#!/bin/bash -x
# Create a new SD card with specified download (1st param) onto /dev/sda

# use raspi-config for as much as possible
if [ -f /usr/bin/raspi-config ]; then
   cp /usr/bin/raspi-config /root/modified-raspi-config
   sed -i -e 's/INTERACTIVE=True/INTERACTIVE=False/' /root/modified-raspi-config
else
   echo "raspi-config is missing. Is this a raspberry pi?"
   exit 1
fi
if [ $(id -u) -ne 0 ];then
   echo Please run as root
   exit 1
fi

# Download the requested raspbian image
if [ $# -lt 3 ];then
   echo Please specify the url of the Raspbian to download, wifi ssid and password
   exit 1
else
   # maybe it has been previously downloaded 
   BASENAME=$(basename $1)
   if [ -f /home/pi/Downloads/$BASENAME ];then
      echo "$1 already present...skipping download"
   else
      wget -P /home/pi/Downloads $1
   fi
fi
fdisk -l /dev/sda
read -p "Does this look like the target SD card that you want to overwrite?" ans
case $ans in
'y'|'Y'|'yes'|'Yes')
   ;;
*)
   echo "Overwrite not confirmed...exiting"
   exit 1
   ;;
esac

# Use ssh file on boot partition to skip writing to the SD card
umount /dev/sda1
NEWBOOT=/mnt/sda1
mkdir -p $NEWBOOT
mount /dev/sda1 $NEWBOOT

if [ -f $NEWBOOT/ssh ]; then
   echo Skipping writting of the SD card because ssh in boot partition exists
   echo If this is not what you, please remove ssh and try again.
   #exit 0
else
   # Copy the OS to the SD card
   unzip /home/pi/Downloads/$BASENAME | dd of=/dev/sda status=progress conv=fsync
fi

partprobe /dev/sda

# automatic mounting is unpredictable 
umount /dev/sda2
mkdir -p /mnt/sda2
NEWROOT=/mnt/sda2
mount /dev/sda2 $NEWROOT

# Put an empty file in boot partition to enable SSH server in Raspbian
touch $NEWBOOT/ssh

# list of virtual filesystems and additional config files
ARGS="dev dev/pts proc sys etc/resolv.conf /var/run/ root"
# mount the virtual filesystems & resolv.conf to enable the network
for i in $ARGS; do
  mount --bind /$i $NEWROOT/$i
done

cp ./tasks $NEWROOT/tasks

chmod 755 $NEWROOT/tasks
chroot $NEWROOT ./tasks

# Now, umount any previous mount
ARGS="dev/pts dev proc sys etc/resolv.conf /var/run/ root"
# mount the virtual filesystems & resolv.conf to enable the network
for i in $ARGS; do
  umount $NEWROOT/$i
done
umount $NEWBOOT
umount $NEWROOT
