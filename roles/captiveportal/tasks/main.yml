- name: Download & install python-dateutil, sqlite3
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - python3-dateutil
    - python3-jinja2

- name: Create directory /opt/iiab/captiveportal for scripts & templates
  file:
    path: /opt/iiab/captiveportal
    state: directory
    owner: "{{ apache_user }}"

- name: 'Copy scripts: checkurls, capture-wsgi.py'
  template:
    src: "{{ item.src }}"
    dest: /opt/iiab/captiveportal/
    mode: "{{ item.mode }}"
  with_items:
    - { src: roles/captiveportal/templates/checkurls, mode: '0644' }
    - { src: roles/captiveportal/templates/capture-wsgi.py, mode: '0755' }

- name: 'Copy templates: simple.template, mac.template'
  copy:
    src: "{{ item }}"
    dest: /opt/iiab/captiveportal/
  with_items:
    - roles/captiveportal/files/simple.template
    - roles/captiveportal/files/mac.template

- name: Copy uWSGI config file
  template:
    src: captiveportal.ini
    dest: /etc/uwsgi/apps-available/

- name: Enable uwsgi config for captiveportal
  file:
    src: /etc/uwsgi/apps-available/captiveportal.ini
    path: /etc/uwsgi/apps-enabled/captiveportal.ini
    state: link
  when: captiveportal_enabled | bool

- name: Copy unit file for uWSGI service
  template:
    src: uwsgi-captiveportal.service
    dest: /etc/systemd/system/

- name: Start or restart server which responds to browsers trying to detect a captive portal
  systemd: 
    name: uwsgi-captiveportal.service
    state: restarted
  when: captiveportal_enabled | bool

- name: Stop uWSGI server if captive portal has been disabled
  systemd: 
    name: uwsgi-captiveportal.service
    state: stopped
  when: not captiveportal_enabled | bool

- name: Run iiab-uncatch to generate diversion lists for dnsmasq and apache2
  shell: /usr/bin/iiab-uncatch
     
- name: Install nginx's captiveportal.conf from template if captiveportal_enabled
  template:
    src: roles/captiveportal/templates/captiveportal-nginx.conf
    dest: /etc/nginx/sites-available
    owner: root
    group: root
    mode: 0644
  when: captiveportal_enabled | bool

- name: Enable nginx's captiveportal.conf if captiveportal_enabled (debuntu)
  file:
    src: /etc/nginx/sites-available/captiveportal-nginx.conf
    path: /etc/nginx/sites-enabled/captiveportal-nginx.conf
    state: link
  when: captiveportal_enabled and is_debuntu


- name: Disable nginx's captiveportal.conf if not captiveportal_enabled (debuntu)
  file:
    path: /etc/nginx/sites-enabled/001-captiveportal.conf
    state: absent
  when: not captiveportal_enabled and is_debuntu

- name: Make sure dnsmasq is not diverting if not captiveportal_enabled
  file:
    path: /etc/dnsmasq.d/capture
    state: absent
  when: not captiveportal_enabled

- name: Add 'captiveportal_installed' variable values to {{ iiab_state_file }}
  lineinfile:
    dest: "{{ iiab_state_file }}"
    regexp: '^captiveportal_installed'
    line: 'captiveportal_installed: True'
    state: present

#- name: Restart dnsmasq
#  systemd:
#    name: dnsmasq
#    state: restarted
#  when: dnsmasq_enabled | bool

# ABOVE DOES NOT WORK ON UBUNTU 16.04 -- what follows is a crude hack (seems to work!)

- name: Stop dnsmasq
  systemd:
    name: dnsmasq
    state: stopped
  when: dnsmasq_enabled | bool

- name: Start dnsmasq
  systemd:
    name: dnsmasq
    state: started
  when: dnsmasq_enabled | bool
  
